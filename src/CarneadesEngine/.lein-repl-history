(or false false false true)
(def s1 {:a 1 :b 2})
(= s1 s1)
(def s2 {:a 1 :b 2})
(= s1 s2)
(== s1 s1)
(identical? s1 s1)
(identical? s1 s2)
(conj 1 2 3)
(list 1 2 3)
(vector 1 2 3)
(vector)
[]
[(cons 1 [])]
([1 2 3] 1)
(get [1 2 3] 1)
(get [1 2 3] 0)
(concat [1 4 4] [] [2 3 4])
(conj [1 2 3] 4 5)
(concat {1 2 3} {2 3 4})
(concat #{1 2 3} #{2 3 4})
(union #{1 2 3} #{2 3 4})
(Clojure.set/union #{1 2 3} #{2 3 4})
(clojure.set/union #{1 2 3} #{2 3 4})
(concat [1 2 3] #{4 5 6})
(assoc {} :a 1)
(= "this" "this")
(keyword "str")
(get {"foo" 1 "bar" 2} "foo")
